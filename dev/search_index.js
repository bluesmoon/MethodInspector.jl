var documenterSearchIndex = {"docs":
[{"location":"index.html#MethodInspector.jl-Documentation","page":"MethodInspector.jl Documentation","title":"MethodInspector.jl Documentation","text":"","category":"section"},{"location":"index.html","page":"MethodInspector.jl Documentation","title":"MethodInspector.jl Documentation","text":"MethodInspector","category":"page"},{"location":"index.html#MethodInspector","page":"MethodInspector.jl Documentation","title":"MethodInspector","text":"Inspect the names and types of positional and keyword arguments to a method\n\n\n\n\n\n","category":"module"},{"location":"index.html#Exported-Functions","page":"MethodInspector.jl Documentation","title":"Exported Functions","text":"","category":"section"},{"location":"index.html","page":"MethodInspector.jl Documentation","title":"MethodInspector.jl Documentation","text":"Modules=[MethodInspector]\nOrder=[:function]","category":"page"},{"location":"index.html#MethodInspector.arg_names-Tuple{Union{Base.MethodList, Vector{Method}}}","page":"MethodInspector.jl Documentation","title":"MethodInspector.arg_names","text":"arg_names(::Method) → Symbol[]\n\nGiven a method, return a list of args required by that method.\n\nArguments\n\nm::Method : The Method or MethodList to check for args\n\nReturns\n\nA Symbol array of the args required by the first method passed in. Arg types and default values are not returned.  Functions with no required args will return an empty array.\n\nExamples\n\narg_names(foo)\n\n\n\n\n\n","category":"method"},{"location":"index.html#MethodInspector.arg_types-Tuple{Method}","page":"MethodInspector.jl Documentation","title":"MethodInspector.arg_types","text":"arg_types(::Method) → Type[]\n\nGiven a method, return the datatype of all its positional arguments.\n\nArguments\n\nm::Method : The Method or MethodList to check for args\n\nReturns\n\nA Type array of the arg types supported by method m. Arg names can be fetched using arg_names. Both functions will return values in the same order. Methods that do not support args will return an empty array.\n\nExamples\n\narg_types(foo)\n\n\n\n\n\n","category":"method"},{"location":"index.html#MethodInspector.kwarg_names-Tuple{Method}","page":"MethodInspector.jl Documentation","title":"MethodInspector.kwarg_names","text":"kwarg_names(::Method) → Symbol[]\n\nGiven a method, return the names of all Keyword Arguments of that method.\n\nArguments\n\nm::Method : The method to check for kwargs\n\nReturns\n\nA Symbol array of the kwargs supported by method m. Arg types can be fetched using kwarg_types which returns types in the same order. Default values are not returned. Methods that do not support kwargs will return an empty array.\n\nExamples\n\nkwarg_names(methods(foo).ms[1])\n\nkwarg_names(methods(foo, (Int,), MyModule))\n\n\n\n\n\n","category":"method"},{"location":"index.html#MethodInspector.kwarg_types-Tuple{Method}","page":"MethodInspector.jl Documentation","title":"MethodInspector.kwarg_types","text":"kwarg_types(::Method) → Type[]\n\nGiven a Method, return a list of types of the keyword warguments supported by that method.\n\nArguments\n\nm::Method : The method to check for kwargs\n\nReturns\n\nA Type array of the kwarg types supported by method m. Arg names can be fetched using kwarg_names. Both functions will return values in the same order. Methods that do not support kwargs will return an empty array.\n\nExamples\n\nkwarg_types(foo)\n\n\n\n\n\n","category":"method"},{"location":"index.html#MethodInspector.unwrap_typevar-Tuple{Any}","page":"MethodInspector.jl Documentation","title":"MethodInspector.unwrap_typevar","text":"Unwrap a TypeVar into its upper type\n\n\n\n\n\n","category":"method"},{"location":"index.html#Index","page":"MethodInspector.jl Documentation","title":"Index","text":"","category":"section"},{"location":"index.html","page":"MethodInspector.jl Documentation","title":"MethodInspector.jl Documentation","text":"","category":"page"}]
}
